services:
  # nestjs-boilerplate-api:
  #   image: nestjs-boilerplate-api-local
  #   container_name: nestjs-boilerplate-api-local
  #   restart: always
  #   build:
  #     context: .
  #     dockerfile: Dockerfile
  #     target: development
  #   env_file:
  #     - .env.docker
  #   ports:
  #     - "3000:3000"
  #   volumes:
  #     - ./src:/app/src
  #   command: pnpm start:dev
  #   networks:
  #     - tour-app-nw

  tour_db:
    image: postgres:16
    container_name: tour-postgres
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: tour_app
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      TZ: "UTC"
    ports:
      - "25432:5432"
    networks:
      - tour-app-nw

  tour_mongo:
    image: mongo:6
    container_name: tour-mongo
    restart: always
    volumes:
      - mongo_data:/data/db
    environment:
      MONGO_INITDB_DATABASE: tour_app
      # MONGO_INITDB_ROOT_USERNAME: mongo
      # MONGO_INITDB_ROOT_PASSWORD: mongo
      TZ: "UTC"
    ports:
      - "27017:27017"
    networks:
      - tour-app-nw


  tour_redis:
    image: redis/redis-stack:latest
    restart: always
    ports:
      - "6378:6379"
      - "8001:8001"
    volumes:
      - redis_data:/data
    healthcheck:
      test: [ "CMD", "redis-cli", "--raw", "incr", "ping" ]
    environment:
      REDIS_ARGS: "--requirepass redispass"
    networks:
      - tour-app-nw

  maildev:
    build:
      context: .
      dockerfile: maildev.Dockerfile
    ports:
      - ${MAIL_CLIENT_PORT}:1080
      - ${MAIL_PORT}:1025
    networks:
      - tour-app-nw

  # tour_pgadmin:
  #   container_name: tour_pgadmin
  #   image: dpage/pgadmin4
  #   ports:
  #     - "18080:80"
  #   volumes:
  #     - pgadmin_data:/root/.pgadmin
  #   environment:
  #     PGADMIN_DEFAULT_EMAIL: admin@example.com
  #     PGADMIN_DEFAULT_PASSWORD: 12345678
  #     PGADMIN_CONFIG_WTF_CSRF_ENABLED: "False"
  #     PGADMIN_CONFIG_ENHANCED_COOKIE_PROTECTION: "False"
  #   networks:
  #     - tour-app-nw

volumes:
  postgres_data:
  pgadmin_data:
  redis_data:
  mongo_data:

networks:
  tour-app-nw:
    driver: bridge
#docker compose -f docker-compose.local.yml up tour_db tour_redis -d
